generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  username    String
  tableId     Int?
  table       Table?   @relation(name: "players", fields: [tableId], references: [id])
  hostTableId Int?
  hostTable   Table?   @relation(name: "host", fields: [hostTableId], references: [id])
  cards       Card[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Table {
  id        Int      @id @default(autoincrement())
  users     User[]   @relation("players")
  host      User[]   @relation("host")
  rounds    Round[]
  isInGame  Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Round {
  id         Int      @id @default(autoincrement())
  cardDeck   CardDeck @relation(fields: [cardDeckId], references: [id])
  cardDeckId Int      @unique
  table      Table    @relation(fields: [tableId], references: [id])
  tableId    Int
}

model CardDeck {
  id    Int    @id @default(autoincrement())
  cards Card[]
  round Round?
}

model Card {
  id         Int      @id @default(autoincrement())
  cardDeck   CardDeck @relation(fields: [cardDeckId], references: [id])
  cardDeckId Int
  user       User?    @relation(fields: [userId], references: [id])
  userId     Int?
}
