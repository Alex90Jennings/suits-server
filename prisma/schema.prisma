generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model PlayerState {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  score      Int?
  bet        Int?
  round      Round?   @relation(fields: [roundId], references: [id])
  roundId    Int?
  hand       String?
  playedCard String?
  playsNext  Boolean? @default(false)
  handsWon   Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}

model User {
  id          Int           @id @default(autoincrement())
  username    String        @db.VarChar(12)
  isHost      Boolean       @default(false)
  table       Table?        @relation(fields: [tableId], references: [id])
  tableId     Int?
  playerState PlayerState[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt
}

model Table {
  id        Int      @id @default(autoincrement())
  rounds    Round[]
  users     User[]
  isInGame  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Round {
  id           Int           @id @default(autoincrement())
  numberCards  Int           @default(0)
  currentTrick String?
  table        Table         @relation(fields: [tableId], references: [id])
  tableId      Int
  trumps       String?
  playerStates PlayerState[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
}
