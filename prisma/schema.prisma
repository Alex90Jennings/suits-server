generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model PlayerState {
  id        Int      @id @default(autoincrement())
  user      User?
  table     Table    @relation(fields: [tableId], references: [id])
  tableId   Int
  score     Int      @default(0)
  bet       Int      @default(0)
  round     Round    @relation(fields: [roundId], references: [id])
  roundId   Int
  hand      String?
  handsWon  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id            Int         @id @default(autoincrement())
  username      String
  isHost        Boolean     @default(false)
  tableId       Int?
  score         Int         @default(0)
  table         Table?      @relation(fields: [tableId], references: [id])
  playerState   PlayerState @relation(fields: [playerStateId], references: [id])
  playerStateId Int         @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Table {
  id          Int           @id @default(autoincrement())
  rounds      Round[]
  users       User[]
  isInGame    Boolean       @default(false)
  playerState PlayerState[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Round {
  id           Int           @id @default(autoincrement())
  numberCards  Int           @default(0)
  currentTrick String?
  table        Table         @relation(fields: [tableId], references: [id])
  tableId      Int
  trumps       String?
  PlayerState  PlayerState[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}
